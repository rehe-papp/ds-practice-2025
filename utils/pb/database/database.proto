syntax = "proto3";

package database;

service DatabaseService {
    rpc Read (ReadRequest) returns (ReadResponse);
    rpc Write (WriteRequest) returns (WriteResponse);
    // Heartbeat message for leader liveness
    rpc SendHeartbeat(HeartbeatRequest) returns (HeartbeatResponse);
    // Election message to start election
    rpc StartElection(ElectionRequest) returns (ElectionResponse);
    // Notification that a new leader is chosen
    rpc AnnounceLeader(CoordinatorMessage) returns (Empty);

    // Two-Phase Commit Methods
    rpc Prepare (DatabasePrepareRequest) returns (DatabasePrepareResponse);
    rpc Commit (DatabaseCommitRequest) returns (DatabaseCommitResponse);
    rpc Abort (DatabaseAbortRequest) returns (DatabaseAbortResponse);
}

message ReadRequest {
    string title = 1;
}

message ReadResponse {
    int32 stock = 1;
    int64 timestamp = 2;
}

message WriteRequest {
    string title = 1;
    int32 new_stock = 2;
    int64 timestamp = 3;
}

message WriteResponse {
    bool success = 1;
}

message HeartbeatRequest {
    int32 from_database_id = 1;
}

message HeartbeatResponse {
    bool alive = 1;
}

message ElectionRequest {
    int32 from_database_id = 1;
}

message ElectionResponse {
    bool acknowledged = 1;
}

message CoordinatorMessage {
    int32 new_leader_id = 1;
}

message Empty {}

// Two-Phase Commit Messages for Database
message DatabasePrepareRequest {
    int32 order_id = 1;
    // Information needed by the database to prepare the update,
    // e.g., the items and quantities from the order.
    message ItemUpdate {
        string title = 1;
        int32 quantity_change = 2; // Negative for reducing stock
    }
    repeated ItemUpdate item_updates = 2;
}

message DatabasePrepareResponse {
    bool ready = 1; // Indicates if the database can prepare the update
}

message DatabaseCommitRequest {
    int32 order_id = 1;
}

message DatabaseCommitResponse {
    bool success = 1;
}

message DatabaseAbortRequest {
    int32 order_id = 1;
}

message DatabaseAbortResponse {
    bool aborted = 1;
}